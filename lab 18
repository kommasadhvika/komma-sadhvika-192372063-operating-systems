#include <stdio.h>
#include <semaphore.h>
#include <pthread.h>
#include <stdlib.h>

#define MAX 5
int buffer[MAX], in = 0, out = 0;
sem_t empty, full, mutex;

void* producer(void* arg) {
    while(1) {
        sem_wait(&empty); sem_wait(&mutex);
        buffer[in] = rand() % 100; printf("Produced: %d\n", buffer[in]);
        in = (in + 1) % MAX; sem_post(&mutex); sem_post(&full);
    }
}

void* consumer(void* arg) {
    while(1) {
        sem_wait(&full); sem_wait(&mutex);
        printf("Consumed: %d\n", buffer[out]);
        out = (out + 1) % MAX; sem_post(&mutex); sem_post(&empty);
    }
}

int main() {
    pthread_t prod, cons;
    sem_init(&empty, 0, MAX); sem_init(&full, 0, 0); sem_init(&mutex, 0, 1);
    pthread_create(&prod, NULL, producer, NULL); pthread_create(&cons, NULL, consumer, NULL);
    pthread_join(prod, NULL); pthread_join(cons, NULL);
    return 0;
}
