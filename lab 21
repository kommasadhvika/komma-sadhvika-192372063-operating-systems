#include <stdio.h>

void worstFit(int blockSize[], int m, int processSize[], int n) {
    int allocation[n];
    for (int i = 0; i < n; i++) allocation[i] = -1; // Initialize all allocations to -1

    for (int i = 0; i < n; i++) {
        int max = -1, index = -1;
        for (int j = 0; j < m; j++) {
            if (blockSize[j] >= processSize[i] && blockSize[j] - processSize[i] > max) {
                max = blockSize[j] - processSize[i];
                index = j;
            }
        }
        if (index != -1) {
            allocation[i] = index;
            blockSize[index] -= processSize[i];
        }
    }

    for (int i = 0; i < n; i++)
        printf("Process %d allocated to Block %d\n", i + 1, allocation[i] == -1 ? -1 : allocation[i] + 1);
}

int main() {
    int blockSize[] = {100, 500, 200, 300, 600};
    int processSize[] = {212, 417, 112, 426};
    int m = sizeof(blockSize) / sizeof(blockSize[0]);
    int n = sizeof(processSize) / sizeof(processSize[0]);

    worstFit(blockSize, m, processSize, n);
    return 0;
}
