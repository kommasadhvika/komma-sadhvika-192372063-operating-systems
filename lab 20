#include <stdio.h>
#include <semaphore.h>
#include <pthread.h>

sem_t mutex, wrt;
int read_count = 0;

void* reader(void* arg) {
    sem_wait(&mutex);
    if (++read_count == 1) sem_wait(&wrt);
    sem_post(&mutex);
    printf("Reader reading\n");
    sem_wait(&mutex);
    if (--read_count == 0) sem_post(&wrt);
    sem_post(&mutex);
    return NULL;
}

void* writer(void* arg) {
    sem_wait(&wrt);
    printf("Writer writing\n");
    sem_post(&wrt);
    return NULL;
}

int main() {
    pthread_t r[5], w[5];
    sem_init(&mutex, 0, 1); sem_init(&wrt, 0, 1);
    for (int i = 0; i < 5; i++) { pthread_create(&r[i], NULL, reader, NULL); pthread_create(&w[i], NULL, writer, NULL); }
    for (int i = 0; i < 5; i++) { pthread_join(r[i], NULL); pthread_join(w[i], NULL); }
    sem_destroy(&mutex); sem_destroy(&wrt);
    return 0;
}
